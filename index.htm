<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Login | SIM Database</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
  <script type="module" src="https://www.gstatic.com/firebasejs/11.8.1/firebase-app.js"></script>
  <script type="module" src="https://www.gstatic.com/firebasejs/11.8.1/firebase-auth.js"></script>
  <script type="module" src="https://www.gstatic.com/firebasejs/11.8.1/firebase-database.js"></script>

  <style>
    body {
      background-color: #f8f9fa;
      font-family: 'Segoe UI', sans-serif;
    }
    .centered {
      max-width: 400px;
      margin: 80px auto;
      padding: 30px;
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 0 20px rgba(0,0,0,0.1);
    }
    .record-card {
      background: #fff;
      padding: 15px;
      margin-bottom: 10px;
      border-radius: 8px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }
  </style>
</head>
<body>
<div class="container mt-4">
  <h1 class="text-center mb-4 text-primary">üì± Yasir SIM DATABASE</h1>

  <!-- Auth -->
  <div id="authSection">
    <div id="loginForm">
      <input type="email" id="emailInput" class="form-control mb-2" placeholder="Email" />
      <input type="password" id="passwordInput" class="form-control mb-2" placeholder="Password" />
      <button id="loginBtn" class="btn btn-primary w-100 mb-2">Login</button>
      <button id="registerBtn" class="btn btn-outline-secondary w-100">Register</button>
    </div>
    <div id="logoutSection" class="d-none">
      <span id="userEmail" class="me-2"></span>
      <button id="logoutBtn" class="btn btn-danger btn-sm">Logout</button>
    </div>
  </div>

  <!-- Search -->
  <div id="searchSection" class="d-none mt-4">
    <input type="text" id="num" class="form-control text-center" placeholder="Enter Number or CNIC" />
    <button id="fetchData" class="btn btn-success w-100 mt-2">Search</button>
    <div id="responseBox" class="mt-3"></div>
  </div>

  <!-- Admin -->
  <button id="adminPanelToggle" class="btn btn-warning mt-4 d-none">Toggle Admin Panel</button>
  <div id="adminPanel" class="card d-none mt-2">
    <div class="card-header bg-warning text-dark">
      <h4 class="mb-0">Admin Panel</h4>
    </div>
    <div class="card-body" style="max-height: 400px; overflow-y: auto;">
      <table class="table table-striped table-bordered align-middle">
        <thead class="table-warning">
        <tr><th>Email</th><th>Approved</th><th>Role</th><th>Actions</th></tr>
        </thead>
        <tbody id="userTableBody"></tbody>
      </table>
    </div>
  </div>
</div>

<script type="module">
import { initializeApp } from "https://www.gstatic.com/firebasejs/11.8.1/firebase-app.js";
import {
  getAuth,
  createUserWithEmailAndPassword,
  signInWithEmailAndPassword,
  signOut,
  onAuthStateChanged,
  deleteUser as firebaseDeleteUser
} from "https://www.gstatic.com/firebasejs/11.8.1/firebase-auth.js";
import {
  getDatabase,
  ref,
  set,
  get,
  update,
  remove
} from "https://www.gstatic.com/firebasejs/11.8.1/firebase-database.js";

const firebaseConfig = {
  apiKey: "AIzaSyDEJig18F3LY8UOcMa4l7uK9FkGwDYtA2Y",
  authDomain: "sim-database-bf915.firebaseapp.com",
  databaseURL: "https://sim-database-bf915-default-rtdb.firebaseio.com",
  projectId: "sim-database-bf915",
  storageBucket: "sim-database-bf915.appspot.com",
  messagingSenderId: "609545113124",
  appId: "1:609545113124:web:82c8a19528aa74387d12b1"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getDatabase(app);

// Elements
const emailInput = document.getElementById('emailInput');
const passwordInput = document.getElementById('passwordInput');
const loginBtn = document.getElementById('loginBtn');
const registerBtn = document.getElementById('registerBtn');
const logoutBtn = document.getElementById('logoutBtn');
const userEmail = document.getElementById('userEmail');
const loginForm = document.getElementById('loginForm');
const logoutSection = document.getElementById('logoutSection');
const searchSection = document.getElementById('searchSection');
const adminPanelToggle = document.getElementById('adminPanelToggle');
const adminPanel = document.getElementById('adminPanel');
const userTableBody = document.getElementById('userTableBody');

let currentUserData = null;

// Register
registerBtn.onclick = () => {
  const email = emailInput.value.trim();
  const pass = passwordInput.value.trim();
  if (!email || !pass) return alert("Email and password required.");
  createUserWithEmailAndPassword(auth, email, pass).then(userCred => {
    set(ref(db, 'users/' + userCred.user.uid), {
      email,
      approved: false,
      role: 'user',
      registeredAt: Date.now()
    });
    alert("Registered! Contact to admin to Active your Account: 0315-4376814.");
  }).catch(err => alert(err.message));
};

// Login
loginBtn.onclick = () => {
  const email = emailInput.value.trim();
  const pass = passwordInput.value.trim();
  if (!email || !pass) return alert("Email and password required.");
  signInWithEmailAndPassword(auth, email, pass).catch(err => alert("Login failed: " + err.message));
};

// Logout
logoutBtn.onclick = () => signOut(auth);

// Auth State
onAuthStateChanged(auth, user => {
  if (!user) {
    loginForm.classList.remove("d-none");
    logoutSection.classList.add("d-none");
    searchSection.classList.add("d-none");
    adminPanelToggle.classList.add("d-none");
    adminPanel.classList.add("d-none");
    userEmail.textContent = "";
    return;
  }

  get(ref(db, 'users/' + user.uid)).then(snapshot => {
    if (!snapshot.exists()) return signOut(auth);
    currentUserData = snapshot.val();
    if (!currentUserData.approved) {
      alert("Account not approved Contact Admin 0315-4376814.");
      signOut(auth);
      return;
    }

    loginForm.classList.add("d-none");
    logoutSection.classList.remove("d-none");
    searchSection.classList.remove("d-none");
    userEmail.textContent = user.email;

    if (currentUserData.role === 'admin') {
      adminPanelToggle.classList.remove("d-none");
      loadUsers();
    }
  });
});

// Toggle Admin Panel
adminPanelToggle.onclick = () => adminPanel.classList.toggle("d-none");

// Load Users
function loadUsers() {
  userTableBody.innerHTML = '<tr><td colspan="4">Loading...</td></tr>';
  get(ref(db, 'users')).then(snapshot => {
    if (!snapshot.exists()) return userTableBody.innerHTML = "<tr><td colspan='4'>No users found.</td></tr>";
    userTableBody.innerHTML = "";
    const users = snapshot.val();
    Object.entries(users).forEach(([uid, data]) => {
      const isCurrentAdmin = uid === auth.currentUser.uid;
      const tr = document.createElement("tr");
      tr.innerHTML = `
        <td>${data.email}</td>
        <td>${data.approved ? "‚úÖ" : "‚ùå"}</td>
        <td>${data.role}</td>
        <td>
          <button class="btn btn-sm ${data.approved ? 'btn-danger' : 'btn-success'} me-1"
            ${isCurrentAdmin ? "disabled" : ""}
            title="${isCurrentAdmin ? "Cannot modify self" : ""}"
            onclick="toggleApproval('${uid}', ${!data.approved})">
            ${data.approved ? "Disapprove" : "Approve"}
          </button>
          <button class="btn btn-sm ${data.role === 'admin' ? 'btn-warning' : 'btn-secondary'} me-1"
            ${isCurrentAdmin ? "disabled" : ""}
            title="${isCurrentAdmin ? "Cannot change own role" : ""}"
            onclick="toggleRole('${uid}', '${data.role === 'admin' ? 'user' : 'admin'}')">
            ${data.role === 'admin' ? "Make User" : "Make Admin"}
          </button>
          <button class="btn btn-sm btn-danger"
            ${isCurrentAdmin ? "disabled" : ""}
            title="${isCurrentAdmin ? "Cannot delete yourself" : ""}"
            onclick="deleteUser('${uid}')">
            Delete
          </button>
        </td>
      `;
      userTableBody.appendChild(tr);
    });
    [...document.querySelectorAll('[title]')].forEach(el => new bootstrap.Tooltip(el));
  });
}

// Actions
window.toggleApproval = (uid, status) => {
  update(ref(db, 'users/' + uid), { approved: status }).then(loadUsers);
};

window.toggleRole = (uid, role) => {
  update(ref(db, 'users/' + uid), { role }).then(loadUsers);
};

window.deleteUser = (uid) => {
  if (!confirm("Are you sure you want to delete this user?")) return;
  remove(ref(db, 'users/' + uid)).then(loadUsers).catch(e => alert(e.message));
};


  // SIM Database Search logic (your existing)
  const fetchDataBtn = document.getElementById("fetchData");
  fetchDataBtn.addEventListener("click", async () => {
    const input = document.getElementById("num");
    const num = input.value.trim();
    const box = document.getElementById("responseBox");
    box.innerHTML = "<div class='text-center text-muted'>Loading...</div>";
    input.value = ""; // clear the field

    const url = `https://api.allorigins.win/get?url=${encodeURIComponent(`https://freshsimdetails.com/wp-json/sim-search/v1/fetch-data?number=${num}`)}`;
    try {
      const res = await fetch(url);
      const json = await res.json();
      const apiData = JSON.parse(json.contents);
      if (!apiData.name || !apiData.cnic) return box.innerHTML = "‚ùå No data found.";

      let html = "";
      if (Array.isArray(apiData.numbers) && apiData.numbers.length > 0) {
        apiData.numbers.forEach(rec => {
          let mobile = typeof rec === 'string' ? rec : rec.mobile || "N/A";
          let operator = rec.operator || apiData.operator || "N/A";
          let address = rec.address || apiData.address || "N/A";
          html += `
            <div class="record-card">
              <strong>üìû Mobile:</strong> ${mobile}<br>
              <strong>üë§ Name:</strong> ${apiData.name}<br>
              <strong>üÜî CNIC:</strong> ${apiData.cnic}<br>
              <strong>üè† Address:</strong> ${address}<br>
              <strong>üì° Operator:</strong> ${operator}<br>
              <button class="btn btn-outline-primary btn-sm mt-2" onclick="shareRecord(this)">üì§ Share</button>
            </div>`;
        });
      } else {
        html = `
          <div class="record-card">
            <strong>üë§ Name:</strong> ${apiData.name}<br>
            <strong>üÜî CNIC:</strong> ${apiData.cnic}<br>
            <strong>üìû Mobile:</strong> ${apiData.number || "N/A"}<br>
            <strong>üè† Address:</strong> ${apiData.address || "N/A"}<br>
            <strong>üì° Operator:</strong> ${apiData.operator || "N/A"}<br>
            <button class="btn btn-outline-primary btn-sm mt-2" onclick="shareRecord(this)">üì§ Share</button>
          </div>`;
      }
      box.innerHTML = html;
    } catch (e) {
      box.innerHTML = `<div class="text-danger">API Error: ${e.message}</div>`;
    }
  });

  // Share function for records
  window.shareRecord = function(button) {
    const card = button.closest('.record-card');
    html2canvas(card).then(canvas => {
      canvas.toBlob(blob => {
        const item = new ClipboardItem({ "image/png": blob });
        navigator.clipboard.write([item]).then(() => alert('Record copied as image!'));
      });
    });
  };
</script>
</body>
</html>
